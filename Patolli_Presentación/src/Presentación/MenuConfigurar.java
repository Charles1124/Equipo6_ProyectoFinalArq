/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Presentación;

import Dominio.Apuesta;
import Dominio.ConfigurarPartida;
import Dominio.Jugador;
import Dominio.Tablero;
import Red.ServidorHilo;
import java.io.IOException;
import java.net.ServerSocket;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 * Frame o pantalla de MenuConfigurar, donde se muestran las opciones de
 * configurar la partida elegidas por el usuario.
 *
 * @author Carlos A. Valle Encinas - David Sotelo Palafox Equipo#6
 */
public class MenuConfigurar extends javax.swing.JFrame {

    Fondo fondo = new Fondo();
    ServerSocket serverSK; 
    ServidorHilo servidorH;
    /**
     * Constructor del Frame.
     */
    public MenuConfigurar() {
        this.setContentPane(fondo);
        initComponents();
    }

     /**
     * Método que permite al usuario volver al Menu Iniciar Partida.
     *
     * @param evt: Evento al que escucha.
     */
    public void volverMenuIniciarPartida(java.awt.event.ActionEvent evt){
      MenuIniciaPartida principal= new MenuIniciaPartida();
      principal.setVisible(true);
      this.dispose();
    }

    /**
     * Método que permite crear la partida en base a las configuraciones
     * solicitadas por el usuario, para así iniciar la conexión.
     */
    public void crearPartida() throws IOException {
        int jugadores=2;
           int fichas=6;
           String tipoTablero= "Grande";

           int puertoOrigen = Integer.parseInt(this.txtPuertoOrigen.getText());

           ConfigurarPartida config=new ConfigurarPartida(jugadores, fichas, tipoTablero);
           List<Jugador> listaJugadores= new ArrayList();

           serverSK=new ServerSocket(5001);
           servidorH= new ServidorHilo(serverSK);
           servidorH.start();

        PantallaPartida pantallaP=new PantallaPartida();
        pantallaP.setVisible(true);
        this.dispose();
    }
     
    /**
     * Método validaMonto que realiza las validaciones principales para el monto
     * del usuario tales como el tamaño de caracteres y que solo se permitan
     * numéricos.
     *
     * @param evt: Evento al que escucha.
     */
    public void validaMonto(java.awt.event.KeyEvent evt){
      txtPuertoOrigen.getText().trim(); 
      if(txtPuertoOrigen.getText().length()>=4)
      {
        evt.consume();
        int msg=1; 
        mostrarMensaje(msg);
      }
      char car= evt.getKeyChar();
      if(Character.isDigit(car)){

      }
      else
      {
         evt.consume();
         getToolkit().beep();
      }  
    
        }

    /**
     * Método mostrarError que recibe como parametro un entero con el tipo de
     * error dependiendo el campo de texto que se esta validando.
     *
     * @param msg: Tipo mensaje.
     */
    public void mostrarMensaje(int msg)
    {
       if(msg==1)
       {
         JOptionPane.showMessageDialog(null, "Solo se permiten como máximo 4 caracteres numéricos", 
        "¡Mensaje de Advertencia!", JOptionPane.WARNING_MESSAGE);
       }
       if(msg==2)
       {
         JOptionPane.showMessageDialog(null, "Al parecer se le ha olvidado rellenar un campo!", 
        "¡Mensaje de Error!", JOptionPane.ERROR_MESSAGE);
       }
       if(msg==3)
       {
           JOptionPane.showMessageDialog(null, "La cantidad máxima a apostar es de $1500!", 
        "¡Mensaje de Error!", JOptionPane.ERROR_MESSAGE);
       }
       if(msg==4){
             JOptionPane.showMessageDialog(null, "Datos de la partida guardados con éxito!", 
        "Configuración Aprobada", JOptionPane.INFORMATION_MESSAGE);
       }
       if(msg==5)
       {
           JOptionPane.showMessageDialog(null, "La cantidad mínima a apostar es de $1000!", 
        "¡Mensaje de Error!", JOptionPane.ERROR_MESSAGE);
       }
       if(msg==6)
       {
        JOptionPane.showMessageDialog(null, "El rango del puerto debe de ser entre 2000 y 10000", 
        "¡Mensaje de Advertencia!", JOptionPane.WARNING_MESSAGE);
       }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        volverMenuIniciarPartida = new javax.swing.JButton();
        btnBuscarPartida = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cboTablero = new javax.swing.JComboBox<>();
        cboFichas = new javax.swing.JComboBox<>();
        txtPuertoOrigen = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        validaMonto = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Configurar Partida");

        volverMenuIniciarPartida.setBackground(new java.awt.Color(204, 255, 255));
        volverMenuIniciarPartida.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        volverMenuIniciarPartida.setForeground(new java.awt.Color(102, 51, 0));
        volverMenuIniciarPartida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/volver.png"))); // NOI18N
        volverMenuIniciarPartida.setText("Volver");
        volverMenuIniciarPartida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverMenuIniciarPartidaActionPerformed(evt);
            }
        });

        btnBuscarPartida.setBackground(new java.awt.Color(204, 255, 255));
        btnBuscarPartida.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        btnBuscarPartida.setForeground(new java.awt.Color(102, 51, 0));
        btnBuscarPartida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buscar.png"))); // NOI18N
        btnBuscarPartida.setText("Iniciar Partida");
        btnBuscarPartida.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnBuscarPartida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPartidaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Seleccionar Tablero:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Seleccionar Color Fichas:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Puerto Origen:");

        cboTablero.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tablero Chico ", "Tablero Mediano", "Tablero Grande" }));

        cboFichas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rojo", "Amarillo", "Verde", "Azul" }));

        txtPuertoOrigen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPuertoOrigenActionPerformed(evt);
            }
        });
        txtPuertoOrigen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPuertoOrigenKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Ingresar Monto Apuesta:");

        validaMonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validaMontoActionPerformed(evt);
            }
        });
        validaMonto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                validaMontoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(68, 68, 68))
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(cboTablero, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(volverMenuIniciarPartida)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(10, 10, 10)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboFichas, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(validaMonto, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPuertoOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBuscarPartida)
                                .addGap(25, 25, 25))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboTablero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboFichas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(validaMonto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtPuertoOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volverMenuIniciarPartida)
                    .addComponent(btnBuscarPartida, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Métdo oyente que llama al método volverMenuIniciarPrincipal. 
     *
     * @param evt: Evento al que escucha.
     */
    private void volverMenuIniciarPartidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverMenuIniciarPartidaActionPerformed
        // TODO add your handling code here:
        volverMenuIniciarPartida(evt);
    }//GEN-LAST:event_volverMenuIniciarPartidaActionPerformed

    /**
     * Método oyente de validaMontoKeyTyped que llama al método validaMonto.
     *
     * @param evt: Evento al que escucha.
     */
    private void txtPuertoOrigenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPuertoOrigenKeyTyped
        // TODO add your handling code here:
       validaMonto(evt);
    }//GEN-LAST:event_txtPuertoOrigenKeyTyped

    /**
     * Método oyente que guarda la configuración de la partida deseada por el
     * usuario realiza las respectivas validaciones y llama al método
     * crearPatida.
     *
     * @param evt: Evento al que escucha.
     */
    private void btnBuscarPartidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPartidaActionPerformed
        // TODO add your handling code here:    
        if(validaMonto.getText().isEmpty()|| txtPuertoOrigen.getText().isEmpty())
        {
           int msg=2;
           mostrarMensaje(msg);
        }
       
      Apuesta apuesta=new Apuesta();
      int cantidad2= Integer.parseInt(validaMonto.getText());
      apuesta.setCantidad(cantidad2);
      if(apuesta.getCantidad()>1500){
         int msg=3; 
         mostrarMensaje(msg); 
      }
      else{
         if(apuesta.getCantidad()<1000){
          int msg=5; 
          mostrarMensaje(msg);
      }
      else{
           int puertoO= Integer.parseInt(txtPuertoOrigen.getText());
        if(puertoO>10000){
               int msg=6; 
               mostrarMensaje(msg);
        }
        else{
          if( puertoO<2000){
               int msg=6; 
               mostrarMensaje(msg);
           }
           else
           {
             try{
             crearPartida();
             }
             catch(Exception e){ 
                  System.out.println("Erro en conexión.."+e);
             }
          }
        } 
       }     
      }
 
 
    }//GEN-LAST:event_btnBuscarPartidaActionPerformed

    private void txtPuertoOrigenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPuertoOrigenActionPerformed
        // TODO add your handling code here:
     
    }//GEN-LAST:event_txtPuertoOrigenActionPerformed

    private void validaMontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validaMontoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_validaMontoActionPerformed

    private void validaMontoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_validaMontoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_validaMontoKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarPartida;
    private javax.swing.JComboBox<String> cboFichas;
    private javax.swing.JComboBox<String> cboTablero;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtPuertoOrigen;
    private javax.swing.JTextField validaMonto;
    private javax.swing.JButton volverMenuIniciarPartida;
    // End of variables declaration//GEN-END:variables

}


/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Presentación;


import Dominio.ConfigurarPartida;
import Dominio.Jugador;
import Dominio.Tablero;
import java.util.List;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 * Frame o pantalla de Unirse a Partida, donde un usuario introduce los puertos
 * correspondientes para iniciar la conexión.
 *
 * @author Carlos A. Valle Encinas - David Sotelo Palafox Equipo#6
 */
public class MenuUnirsePartida extends javax.swing.JFrame {

    Fondo fondo = new Fondo();
    MenuPrincipal principal = new MenuPrincipal();

    /**
     * Constructor del Frame.
     */
    public MenuUnirsePartida() {
        this.setContentPane(fondo);
        initComponents();
    }
  
    /**
     * Método UnirsePartida en donde en base a los puertos proporcionados se
     * realiza la conexión con el usuario correspondiente que creo la partida.
     */
     public void UnirsePartida(){
           int jugadores=2;
           int fichas=6;
           String tipoTablero= "Grande";

           int puertoOrigen = Integer.parseInt(this.txtPuertoOrigen.getText());
           int puertoDestino = Integer.parseInt(this.txtPuertoDestino.getText());

           ConfigurarPartida config=new ConfigurarPartida(jugadores, fichas, tipoTablero);
           List<Jugador> listaJugadores= new ArrayList();

           /**for (int i=0; i<jugadores; i++){
            Jugador jugador;
            
            switch (i){
                case 0: {
                    jugador = new Jugador("Azul", configuracionPartida.getFichasPorJugador());
                    jugador.setFichaActual(0);
                    listaJugadores.add(jugador);
                    break;
                }
                case 1:{
                    jugador = new Jugador("Naranja", configuracionPartida.getFichasPorJugador());
                    jugador.setFichaActual(0);
                    listaJugadores.add(jugador);
                    break;
                }
                case 2:{
                    jugador = new Jugador("Verde", configuracionPartida.getFichasPorJugador());
                    jugador.setFichaActual(0);
                    listaJugadores.add(jugador);
                    break;
                }
                case 3:{
                    jugador = new Jugador("Morada", configuracionPartida.getFichasPorJugador());
                    jugador.setFichaActual(0);
                    listaJugadores.add(jugador);
                    break;
                }
            }
        }   **/     

        Tablero tablero = new Tablero(listaJugadores, config);

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                if (tipoTablero.equalsIgnoreCase("Grande")){
                    new PantallaPartida(tablero, puertoOrigen, puertoDestino).setVisible(true);
                }
            }
        });
        
        this.dispose();
     }



    /**
     * Método que se asegura que solo se permitan caracteres numéricos.
     *
     * @param evt evento al que escucha.
     */
    public void validaPuerto(java.awt.event.KeyEvent evt) {
        char car = evt.getKeyChar();
        if (Character.isDigit(car)) {

        } else {
            evt.consume();
            getToolkit().beep();
        }
    }


    /**
     * Método mostrarError que recibe como parametro un entero con el tipo de
     * error dependiendo el campo de texto que se esta validando.
     *
     * @param msg: Tipo mensaje.
     */
    public void mostrarError(int msg)
    {
       if(msg==1)
       {
        JOptionPane.showMessageDialog(null, "El rango para el puerto es de 2000 a 10000", 
        "¡Mensaje de Advertencia!", JOptionPane.WARNING_MESSAGE);
       }
       if(msg==2)
       {
         JOptionPane.showMessageDialog(null, "Al parecer se le ha olvidado rellenar un campo!", 
        "¡Mensaje de Error!", JOptionPane.ERROR_MESSAGE);
       }
    }

    /**
     * Método que permite al usuario volver al Menu Principal.
     *
     * @param evt: Evento al que escucha.
     */
    public void volverMenuPrincipal(java.awt.event.ActionEvent evt){
      principal.setVisible(true);
      this.dispose();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtPuertoOrigen = new javax.swing.JTextField();
        txtPuertoDestino = new javax.swing.JTextField();
        btnVolver = new javax.swing.JButton();
        btnBuscarPartida = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Unirse a Partida");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Puero Origen:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Puerto Destino:");

        txtPuertoOrigen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPuertoOrigenKeyTyped(evt);
            }
        });

        txtPuertoDestino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPuertoDestinoKeyTyped(evt);
            }
        });

        btnVolver.setBackground(new java.awt.Color(204, 255, 255));
        btnVolver.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        btnVolver.setForeground(new java.awt.Color(102, 51, 0));
        btnVolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/volver.png"))); // NOI18N
        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        btnBuscarPartida.setBackground(new java.awt.Color(204, 255, 255));
        btnBuscarPartida.setFont(new java.awt.Font("Segoe UI Semibold", 1, 18)); // NOI18N
        btnBuscarPartida.setForeground(new java.awt.Color(102, 51, 0));
        btnBuscarPartida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/buscar.png"))); // NOI18N
        btnBuscarPartida.setText("Buscar Partida");
        btnBuscarPartida.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        btnBuscarPartida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPartidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(txtPuertoOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtPuertoDestino, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnVolver)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addComponent(btnBuscarPartida)
                        .addGap(37, 37, 37))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPuertoOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPuertoDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarPartida, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

     /**
     * Métdo oyente que llama al método volverMenuPrincipal. 
     *
     * @param evt: Evento al que escucha.
     */
    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        // TODO add your handling code here:
       volverMenuPrincipal(evt);
    }//GEN-LAST:event_btnVolverActionPerformed

    /**
     * Método btnBuscarPartida que realiza las validaciones correspondientes y
     * llama al método de UnirsePartidda.
     *
     * @param evt: Evento al que escucha.
     */
    private void btnBuscarPartidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPartidaActionPerformed
        // TODO add your handling code here:

        if(txtPuertoOrigen.getText().isEmpty() || txtPuertoDestino.getText().isEmpty())
        {
           int msg=3;
           mostrarError(msg);
        }
        int puertoO= Integer.parseInt(txtPuertoOrigen.getText());
        int puertoD= Integer.parseInt(txtPuertoDestino.getText());
        if(puertoD>10000 || puertoO>10000){
               int msg=1; 
               mostrarError(msg);
        }
        else{
          if(puertoD<2000 || puertoO<2000){
               int msg=1; 
               mostrarError(msg);
           }
           else
           {
             UnirsePartida();
          }
        } 
    }//GEN-LAST:event_btnBuscarPartidaActionPerformed
    
    private void txtPuertoOrigenKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPuertoOrigenKeyTyped
        // TODO add your handling code here:
        validaPuerto(evt);
    }//GEN-LAST:event_txtPuertoOrigenKeyTyped

    private void txtPuertoDestinoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPuertoDestinoKeyTyped
        // TODO add your handling code here:
         validaPuerto(evt);
    }//GEN-LAST:event_txtPuertoDestinoKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarPartida;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtPuertoDestino;
    private javax.swing.JTextField txtPuertoOrigen;
    // End of variables declaration//GEN-END:variables


}

